@startuml
skin rose

' !theme aws-orange from https://raw.githubusercontent.com/plantuml/plantuml/master/themes

participant Command as Command
participant CmdLine as CmdLine
participant UART as UART
participant QUEUE as QUEUE

loop while Data Available
    Command -> UART: UART_IsAvailableDataReceive(&uart_cfg_cml)
    UART -> QUEUE: QUEUE_Is_Empty(&uart_cfg_cml->rx_buffer)
    QUEUE --> UART: return false
    UART --> Command: return 1
    Command -> UART: UART_ReadChar(&uart_cfg_cml)
    alt !QUEUE_Is_Empty ((ring_buffer_t *)&uartstdio_device->rx_buffer)
        UART -> UART: ATOMIC_BLOCK_START(uartstdio_device->uart)
        UART -> QUEUE: QUEUE_Pull_Data((ring_buffer_t *)&uartstdio_device->rx_buffer)
        QUEUE --> UART: c
        UART -> UART: ATOMIC_BLOCK_END(uartstdio_device->uart)
    end
    UART --> Command: rxData
    Command -> UART: UART_SendChar(&uart_cfg_cml, rxData)
    alt rxData == ESC (27)
        Command -> Command: 
        note right: Handle Data
    end
    alt rxData == '\\r' or rxData == '\\n'
        alt s_commandBufferIndex > 0
            Command -> Command: s_commandBuffer[s_commandBufferIndex] = 0
            Command -> Command: s_commandBufferIndex++
            Command -> CmdLine: CmdLineProcess(s_commandBuffer)
            CmdLine --> Command: retVal
            Command -> Command: s_commandBufferIndex = 0
            Command -> UART: UART_SendString(&uart_cfg_cml, "\\r\\n> ")
            Command -> UART: UART_SendString(&uart_cfg_cml, ErrorCode[retVal])
            Command -> UART: UART_SendString(&uart_cfg_cml, "> ")
        else
            Command -> UART: UART_SendString(&uart_cfg_cml, "\\r\\n> ")
        end
    else if rxData == 8 or rxData == 127
        alt s_commandBufferIndex > 0
            Command -> Command: s_commandBufferIndex--
        end
    else
        Command -> Command: s_commandBuffer[s_commandBufferIndex] = rxData
        Command -> Command: s_commandBufferIndex++
        alt s_commandBufferIndex > COMMAND_MAX_LENGTH
            Command -> Command: s_commandBufferIndex = 0
        end
    end
end

@enduml
